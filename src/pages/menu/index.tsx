import { type GetStaticProps, type NextPage } from "next";
import Head from "next/head";
import { PageLayout } from "~/components/Layout";
import { api } from "~/utils/api";
import MenusList from "~/components/Menu/MenusList";
import { generateSSGHelper } from "~/server/helpers/ssgHelper";
import { SmtWrong } from "~/components/Primary";
import { LoadingSpinner } from "~/components/Primary/LoadingSpinner";

const MenusPage: NextPage = () => {
  const { data: store, isLoading: isLoadingStore } =
    api.stores.getStore.useQuery();
  const { data: storeConfig, isLoading: isLoadingConfig } =
    api.stores.getConfig.useQuery();
  const { data: menus, isLoading } = api.menus.getAll.useQuery({
    active: true,
  });

  if (isLoading || isLoadingConfig || isLoadingStore) return <LoadingSpinner />;
  if (!store || !menus) return <SmtWrong />;

  return (
    <>
      <Head>
        <title>{store.name} - Menus</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PageLayout bgImgs={storeConfig?.bgImgs?.split(";")}>
        <MenusList menus={menus} isLoading={isLoading} />
      </PageLayout>
    </>
  );
};

export const getStaticProps: GetStaticProps = async () => {
  const ssg = generateSSGHelper();
  await ssg.stores.getConfig.prefetch();
  return {
    props: {
      trpcState: ssg.dehydrate(),
    },
  };
};

export default MenusPage;
