import { Loader } from "@mantine/core";
import { type GetStaticProps, type NextPage } from "next";
import Head from "next/head";
import { ItemsList } from "~/components/Menu2/ItemsList";
import { PageLayout } from "~/components/Layout";
import { api } from "~/utils/api";
import { getProductLocaleProps } from "~/utils/helpers";
import { type Category } from "@prisma/client";
import { Centered } from "~/components/Primary/LoadingSpinner";

const MenuPage: NextPage = ({ token }: { token?: string }) => {
  const { data: storeData, isLoading: storeLoading } =
    api.stores.loadDataByCode.useQuery();
  const { data: items, isLoading } = api.items.getAll.useQuery();

  if (storeLoading)
    return (
      <Centered>
        <Loader />
      </Centered>
    );

  if (!storeData || !items || !storeData.categories)
    return <Centered>Something went wrong</Centered>;

  const { categories: cats } = storeData;

  const categories = cats.map((item: Category) => {
    const translations = getProductLocaleProps({
      item,
      keys: ["name"],
    });

    return { code: item.code, name: translations.name as string };
  });

  return (
    <>
      <Head>
        <title>Menu - {storeData.store?.name}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PageLayout>
        <ItemsList
          categories={categories}
          items={items}
          isLoading={isLoading}
          token={token}
        />
      </PageLayout>
    </>
  );
};

export function getStaticPaths() {
  return {
    paths: [],
    // Enable statically generating additional pages
    // For example: `/posts/3`
    fallback: true,
  };
}

export const getStaticProps: GetStaticProps = (context) => {
  const token = context.params?.token as string;

  return {
    props: {
      token,
    },
  };
};

export default MenuPage;
